! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 78 0`

[ os ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`1 1 1 9`

[ kernel ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`2 1 2 29`

[ network ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`3 1 3 30`

[ io ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 25`

[ common ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 20`

[ fork_and_circulate ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 58 45`
(signature)`fork_and_circulate(test, am, channels)`


[ test_bidirectional ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`60 1 66 39`
(signature)`test_bidirectional(test)`

Check for IPC via bidirectional spawns


[ test_unidirectional ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`68 1 78 39`
(signature)`test_unidirectional(test)`

Check for IPC via unidirectional spawns

