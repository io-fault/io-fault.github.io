[["Check the implementation of filesystem routes."], ["Check for &.files.root presence and sanity."], ["- &lib.Path.fs_list"], ["- &lib.Path.fs_iterfiles"], ["- &lib.Path.fs_index", "- &lib.Path.fs_list"], ["- &lib.Path.fs_snapshot"], ["- &lib.Path.fs_real"], ["Test &lib.Path.fs_init checking that the parent directories are", "properly created regardless of the selected type."], ["Test &lib.Path.fs_mkdir checking that the parent directories are", "properly created regardless of the selected type."], ["- &lib.Path.fs_type"], ["System check."], ["System check."], ["Validate &lib.Path.get_text_content."], ["Validate &lib.Path.set_text_content."], ["&lib.Path.fs_since"], ["Test the various classmethods that construct file instances."], ["- &lib.Path.__pos__"], ["- &lib.Path.prefix_filename", "- &lib.Path.suffix_filename"], ["- &lib.Path.join"], ["- &lib.File.fs_open"], ["- &lib.File.fs_open"], ["- &lib.Path.fs_void"], ["&lib.Path.fs_link_relative"], ["&lib.Path.fs_link_absolute"], ["&lib.Path.fs_since with recursive directories."], ["- &lib.Path.fs_follow_links"], ["- &lib.Path.fs_load", "- &lib.Path.fs_store"], ["- &lib.Path.__fspath__"], ["- &lib.Path.fs_snapshot"], ["- &lib.Path.fs_snapshot"], ["- &lib.Path.fs_snapshot"], ["- &lib.Path.fs_alloc"], ["- &lib.Path.fs_require", "- &lib.RequirementViolation", "", "Validate that missing file cases are handled."], ["- &lib.Path.fs_require", "- &lib.RequirementViolation", "", "Validate that fs_require checks the type."], ["- &lib.Path.fs_require", "- &lib.RequirementViolation", "", "Validate that fs_require checks the properties."], ["- &lib.Path.fs_require", "- &lib.RequirementViolation", "", "Validate that fs_require allows for optional directory."], ["- &lib.Path.fs_require", "- &lib.RequirementViolation", "", "Validate that the implied accessibility constraint is", "communicated when paths traverse through regular files or", "directories without the necessary permissions."]]