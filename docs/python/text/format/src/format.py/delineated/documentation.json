[["Parser implementation and supporting tools for the fault-text format.", "", "The parser is hand rolled in order to easily accommodate for grammar", "violations, and as an attempt to display the format's simplicity. While the", "tokenizer enjoys an easily understood implementation, syntactic analysis", "(&Parser.structure) is hacked and nearly unreadable demanding a replacement.", "", "[ Types ]", "", "/Tree/", "\tThe element tree produced by &Parser processing operations.", "", "[ Engineering ]", "The current implementation of the parser failed to achieve a desired level", "of simplicity. While it usually produces the desired result, the lack of", "implementation coherency should result in a rewrite."], ["Given the contents of a section command or reference,", "return the depth and the section path specified within the", "given &string."], ["Iterator that allows events to be replayed in order for them", "to be processed by the appropriate context."], ["Configuration and state class for parsing kleptic text.", "", "[ Properties ]", "/stack/", "\tThe stack of line processing callbacks for the given context.", "/paragraph/", "\tA sequence representing the current working paragraph.", "/indentation/", "\tThe current indentation level.", "/path/", "\tThe current section path.", "/prefix/", "\tThe designated bottom of the &path.", "\tUsed to allow subchapter tokens to be introduced as an extension", "\tof the root chapter."], ["Create a new parser instance initializing the &stack with the &default_commands,", "and &process_paragraph_line as the means to process lines."], ["Return the set of commands for the current working processor."], ["Split the string at the reference's boundary.", "The &string is presumed to be the start of a reference with", "the indicator removed.", "", "#!text", "\t&<...>", "\t&[Parameters(...)]", "\t(int *)`3928+23192-203`"], ["The current processing method, command set, and indentation level.", "Top of the &stack."], ["Determine if the line is a decoration."], ["Return a sequence of paragraph events noting the emphasis areas versus", "regular text."], ["Identify the styles and references for the given string.", "", "[ Parameters ]", "/string/", "\tThe text between a literal area.", "/edge/", "\tWhether the &string was on the edge of a literal."], ["Structure the paragraph line revealing emphasis,", "references, and inline literals."], ["Process a paragraph line identifying inline literals, references and emphasis."], ["Lines that begin with \"!\":", "", "#!text", "\t\" ! NOTE:", "\t\t\" Paragraphs."], ["Code block of literal lines."], ["Tokenize the given source returning an iterator producing text events.", "&source presumed to be is newline separated string."], ["Structure the given &lines into an element tree."], ["Parse the source source into a tree structure."]]