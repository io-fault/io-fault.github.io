[["Service contexts for accepting HTTP requests."], ["Request execution controller for HTTP services."], ["Initiate the response causing headers to be sent and connect the &channel as the", "HTTP response entity body. If &channel is &None, no entity body will be supplied."], ["Connect entity body of the request to the given &channel.", "If &channel is &None, any entity body sent will trigger a fault."], ["Append a single header to the header sequence that will be supplied by the response."], ["Add a sequence of headers."], ["Assign the status of the response and designate the transfer encoding.", "Excepting &length, all parameters *must* be &bytes instances;", "this is intended to emphasize that the fields are being directly inserted", "into the wire.", "", "If &cotype is &None, neither (http/header)`Content-Length` nor", "(http/header)`Transfer-Encoding` will be appended to the headers.", "", "If &cotype is not &None and &length is &None, chunked transfer encoding will be used.", "If &cotype is not &None and &length is an integer, (http/header)`Content-Length`", "will be provided."], ["Emit a (http/code)`100` continue response", "with the given headers. Emitting a continuation", "after a non-100 response has been sent will fault", "the Transaction.", "", "[ Engineering ]", "Currently, the HTTP implementation presumes one response", "per transaction which is in conflict with HTTP/1.1's CONTINUE."], ["Location header redirect using a 301-MOVED PERMANENTLY response."], ["Define the type and length of the entity body to be sent."], ["Dispatch the given &channel using a new &io.Transfer instance into &invocations'", "&io.Transport transaction."], ["Construct a Flow consisting of a single &flows.Iterate instance", "used to stream output to the connection protocol state.", "", "The &io.Transfer transaction will be dispatched into the &io.Transport", "supporting the connection to the remote peer."], ["Send the given &data to the remote end with the given content type, &cotype.", "If other headers are desired, they *must* be configured before running", "this method."], ["Send the given &data to the remote end with the given &mime type.", "If other headers are desired, they *must* be configured before running", "this method."], ["Send the file referenced by &route to the remote end as", "the (HTTP) entity body.", "", "[ Parameters ]", "/route/", "\tRoute instance selecting the file.", "/cotype/", "\tThe content type to designate in the response."], ["Send the file referenced by &route to the remote end as", "the (HTTP) entity body.", "", "[ Parameters ]", "/route/", "\tRoute instance selecting the file.", "/cotype/", "\tThe content type to designate in the response."], ["Connect the input Flow to a buffer that executes", "the given callback when the entity body has been transferred."], ["Connect the given input to a transfer that discards events."], ["System Context for managing a set of &Host instances.", "Provides grouping for hosts that share the same system network", "interface.", "", "[ Properties ]", "/http_default_host/", "\tThe default HTTP Host; the &Host to select in", "\tcases where no (http/header)`Host` is designated by", "\ta request."], ["Route the protocol transactions to the designated host.", "This only enqueues the invocation for subsequent execution."], ["Base class for host applications.", "", "[ Properties ]", "", "/part_path/", "\tThe absolute (URI) path used to reach the partition.", "\tFor application servers, this is normally `'/'`.", "/part_argv/", "\tThe arguments that were configured with the partition."], ["Allocate a sequence of controllers and process them using &part_select."], ["Read-only filesystem union for serving local files."], ["An HTTP Host interface for managing routing of service connections,", "and handling the representation of error cases.", "", "[ Properties ]", "", "/h_names/", "\tThe set hostnames that this host can facilitate.", "\tThe object can be an arbitrary container in order", "\tto match patterns as well.", "", "/h_canonical/", "\tThe first name given to &h_update_names. &None", "\tif no names were given and the name should be", "\tinherited from requests.", "", "/h_root/", "\tThe root of the host's path as a &..context.match.SubsequenceScan.", "\tThis is the initial path of the router in order to allow \"mounts\"", "\tat arbitrary positions. Built from &requisite prefixes.", "", "/h_allowed_methods/", "\tMethod restrictions for the host. &None if not restricted.", "", "/h_headers/", "\tHeaders added to every response routed to this host.", "", "[ Engineering ]", "While proper caching should be handled by a proxy, caching of \"constants\"", "should be performed here as well. A constant would be a resource", "that is designated as being the only possible version when given", "the same path. Constants would be shared across forks using a mmap region", "initialized by a parent process."], ["Cache for encoded identifiers often used with a host."], ["Modify the host names that this interface responds to."], ["Configure and dispatch the host's partitions."], ["Add the given &partition to the host."], ["Terminate and remove the partition identified by its path."], ["Handle a request for (http/initiate)`OPTIONS * HTTP/x.x`.", "Individual Resources may support an OPTIONS request as well."], ["Host error handler. By default, emits an XML document with an assigned stylesheet", "that can be retrieved for formatting the error. Additional error data may by", "injected into the document in order to provide application-level error information.", "", "Given the details about an HTTP error message and the corresponding", "&http.IO, emit the rendered error to the client."], ["Method called when no prefix matches the request.", "", "Provided for subclasses in order to override the usual (http/error)`404`."], ["Route the request to the identified partition."], ["Allocate a sequence of controllers and process them using &h_route."]]