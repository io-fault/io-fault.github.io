! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 118 0`
Connect an adapter to the stored security context.


[ os ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 9`

[ copy ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 11`

[ files ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 27`

[ process ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 29`

[ execution ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 31`

[ lsf ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 11 36`

[ factory ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`12 1 12 30`

[ info ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`14 1 19 1`
#!source
		identifier = 'http://fault.io/python/security/kprotocol-',
		name = 'kprotocol-',
		authority = 'fault.io',
		contact = "http://fault.io/critical"
	)
	

[ requirements ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`21 1 24 2`
#!source
		'http://fault.io/python/system/extensions.interfaces',
		'http://fault.io/python/security/implementations',
	])
	

[ formats ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`26 1 39 1`
#!source
		'http://if.fault.io/factors/system': [
			('elements', 'c', '2011', 'c'),
			('void', 'h', 'header', 'c'),
			('references', 'sr', 'lines', 'text'),
		],
		'http://if.fault.io/factors/python': [
			('module', 'py', 'psf-v3', 'python'),
			('interface', 'pyi', 'psf-v3', 'python'),
		],
		'http://if.fault.io/factors/meta': [
			('references', 'fr', 'lines', 'text'),
		],
	}
	

[ pyi ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`41 1 41 41`
#!source
	fr = lsf.types.factor@'meta.references'

[ fr ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`42 1 42 39`
#!source
	sr = lsf.types.factor@'system.references'

[ sr ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`43 1 43 41`
#!source
	

[ module_template ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`45 1 57 3`
#!source
		#define ADAPTER_{upper} 1
		#define ADAPTER_TRANSPORT_NEW transport_new_{lower}
		#define ADAPTER_VERIFY SSL_VERIFY_PEER
		#define CONTEXT_LOCATION "{context}"
		#include <kprotocol-openssl.h>
		#include <fault/python/module.h>
	
		INIT(module, 0, PyDoc_STR("{lower} kprotocol adapter using OpenSSL."))
		{{
			return(init_implementation_data(module));
		}}
	"""
	

[ init_product ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`59 1 66 10`
(signature)`init_product(route, roots)`


[ init_project ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`68 1 101 30`
(signature)`init_project(product, orientation, interfaces, libraries)`


[ main ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`103 1 118 46`
		- (type/syntax)`process.Exit`
		- (type/context-local/factor-element)&<fault.system/process#Exit[fault.system.process.Exit]>
		
(signature)`main(inv)`

