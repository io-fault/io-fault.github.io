! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 60 0`
		- (coverage-zeros)`0`
		- (coverage-counters)`0`
Human readable count (number) formatting using metric symbol suffixes.


[ steps ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 15 1`
#!source
	steps = [
		('', '', 0),
		('kilo', 'k', 3),
		('mega', 'M', 6),
		('giga', 'G', 9),
		('tera', 'T', 12),
		('peta', 'P', 15),
		('exa', 'E', 18),
		('zetta', 'Z', 21),
		('yotta', 'Y', 24),
	]

[ precision ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`17 1 27 10`
(signature)`precision(count)`

Find the prefix, suffix, and power that the given count should be classified as.


[ metric ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`29 1 60 42`
(signature)`metric(value, decimal)`

Construct a sequence of strings that make up the formatted text to be printed.

[ > Parameters ]

/(parameter)`value`/
	
	The number to be formatted.

/(parameter)`decimal`/
	
	The character that should be used to separate the whole and fraction.

/(parameter)`formatting`/
	
	(control/absent)`Undocumented`.

[ > Returns ]

# Whole number portion.
# Decimal point. Defaults to (character)`.`.
# Fractional portion of the number in decimal.
# Metric suffix; empty string if less than (integer)`1000`.

