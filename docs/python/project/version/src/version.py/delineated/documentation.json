[["Release version data structures."], ["Primary fields for project using semantic versioning.", "", "&Prerelease instances should be carried alongside if such information is desired by a codepath.", "Separation is performed as any desired comparisions should only use the primary delta fields.", "", "[ Properties ]", "/major/", "\tMajor revision usually indicating which protocol set is implemented.", "\tOften, the API should have intersections with earlier major revisions,", "\tbut the level of inconsistency is usually high enough to expect mismatches.", "/minor/", "\tMinor revision indicating the level of the protocol set, increasing", "\tthe number usually indicating an expansion of the protocols.", "/patch/", "\tRevision indicator noting complete protocol set consistency across", "\tdistinct values. Used for releases that correct defects.", "", "\tPatch should be negative if describing a pre-release and potentially", "\ta negative number indirectly identifying the &Prerelease.quality."], ["Pre-release version information.", "", "[ Properties ]", "/quality/", "\tA string describing the quality of the release.", "\tFor example, `'beta'`, `'alpha'`, `'rc'`.", "/serial/", "\tAn integer incremented to distinguish from previous pre-releases with the same quality."]]