[["Naive prefix searching implementations."], ["Subsequence search implementation based on scanning the possible", "sizes and checking the candidate subsequence's presence in a set.", "", "This naive implementation is O(N) (hash checks and subsequence) worst", "case for first match, so it is inappropriate for large sets.", "", "However, when used as part of a tree where the sequence is kept small,", "it may be a reasonable implmentation selection.", "", "[ Properties ]", "", "/sequences/", "\tThe set of sequences that will be scanned by &matches.", "", "/sizes/", "\tThe ordered sequence of slice sizes that sources", "\tthe match search.", "", "/offset/", "\tThe starting point of the subsequence's slice;", "\tusually zero."], ["Create a SubsequenceScan from the given set of sequences.", "", "[ Parameters ]", "", "/sequences/", "\tA sequence of sequences to scan. Usually, a list of &str instances.", "\tThis is transformed into a set of sequences.", "", "/offset/", "\tThe start of the subsequence to check; usually `0`.", "", "/order/", "\t`True` means to match the longest subsequence first, and", "\t`False` means to match the shortest first.", "\tWhen `False`, the longest match will never be the first occurrence."], ["Add new values to the set of sequences.", "", "! WARNING:", "\tImplementation reconstructs the &sizes sequence every call."], ["Remove values from the set of sequences.", "", "! WARNING:", "\tImplementation reconstructs the &sizes sequence every call."], ["Identify all strings in the set that match the given key based", "on the configured offset."], ["Get the first match in the set of strings."]]