! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 93 0`
		- (coverage-zeros)`0`
		- (coverage-counters)`0`
Fork-based worker context for daemon processes.


[ os ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 9`

[ weakref ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 14`

[ execution ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 30`

[ process ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 28`

[ kcore ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`10 1 10 27`

[ kdispatch ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 11 35`

[ system ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`12 1 12 20`

[ ProcessManager ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`14 1 93 27`
! INHERIT:
	- (control)`property-set`
	- (source/area)`14 22 14 34`
	- (type/syntax)`kcore.Context`
	- (type/project-local/factor-element)&<core#Context[fault.kernel.core.Context]>
	
Application context maintaining a pool of worker processes.


[ ProcessManager >> __init__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`19 2 25 32`
(signature)`__init__(self, application, update)`


[ ProcessManager >> actuate ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`27 2 29 19`
(signature)`actuate(self)`


[ ProcessManager >> xact_exit ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`31 2 47 21`
(signature)`xact_exit(self, xact)`

Called when a fork's exit has been received by the controlling process.


[ ProcessManager >> xact_void ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`49 2 51 28`
(signature)`xact_void(self, final)`


[ ProcessManager >> ctl_fork ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`53 2 67 58`
(signature)`ctl_fork(self, fid)`

Fork the process using the given (factor-local/parameter)&<#ProcessManager.ctl_fork.Parameters.fid[fid]> as its identifier.


[ ProcessManager >> ctl_forked ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`69 2 82 18`
(signature)`ctl_forked(self, fork_id)`

Initial invocation of a newly forked process.
Indirectly invoked by (factor-local/method)&<#ProcessManager.ctl_fork[ctl_fork]> through (project-local/unknown)&<system#Process.fork[system.Process.fork]>.


[ ProcessManager >> terminate ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`84 2 93 27`
(signature)`terminate(self)`

