! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 127 5`
		- (coverage-zeros)`74`
		- (coverage-counters)`81`
Formatting routines for representing processor hierarchies.


[ sys ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 10`

[ collections ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 18`

[ functools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`6 1 6 16`

[ inspect ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 14`

[ itertools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 16`

[ traceback ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 16`

[ perspectives ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`11 1 40 9`
		- (coverage-zeros)`13`
		- (coverage-counters)`13`
(signature)`perspectives(resource)`

Return the stack of structures used for Resource introspection.

Traverses the MRO of the (factor-local/parameter)&<#perspectives.Parameters.resource[resource]> class and executes the (invalid/unknown)&<#structure>
method; the corresponding class, properties, and subresources are
then appended to a list describing the (invalid/unknown)&<#Resource> from the perspective
of each class.

Returns `[(Class, properties, subresources), ...]`.


[ sequence ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`42 1 71 74`
		- (coverage-zeros)`15`
		- (coverage-counters)`15`
(signature)`sequence(identity, resource, perspective, traversed)`

Convert the structure tree of a (invalid/unknown)&<#Resource> into a sequence of tuples to be
formatted for display.


[ format ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`73 1 128 4`
		- (coverage-zeros)`46`
		- (coverage-counters)`46`
(signature)`format(identity, resource)`

Format the (invalid/unknown)&<#Resource> tree in fault.text.

