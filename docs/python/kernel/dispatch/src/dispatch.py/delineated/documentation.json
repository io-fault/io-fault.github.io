[["Executive processors containing a primitive execution unit."], ["A single callable represented as a Processor.", "Used as an abstraction for explicit enqueues, and to trigger faults in Sectors.", "", "This should be rarely used in practice."], ["Create a call applying the arguments to the callable upon actuation.", "The positional arguments will follow the &Sector instance passed as", "the first argument."], ["The partial application to the callable to perform.", "Usually, instantiating from &partial is preferrable;", "however, given the presence of a &functools.partial instance,", "direct initialization is better.", "", "[ Parameters ]", "/call/", "\tThe callable to enqueue during actuation of the &Processor."], ["Processor for coroutines.", "", "Manages the generator state in order to signal the containing &Sector of its", "exit. Generator coroutines are the common method for serializing the dispatch of", "work to relevant &Sector instances.", "", "! WARNING: Untested."], ["! INTERNAL: Private Method", "", "Container for the coroutine's execution in order", "to map completion to processor exit."], ["Start the coroutine."], ["Force the coroutine to close."], ["A &Processor that runs a callable in a dedicated thread."], ["Create the thread and execute the target.", "", "Exceptions raised by the thread will cause the processor to fault."], ["A set of running system processes.", "Terminates when all members of the set has exited *and* all subtransactions have completed.", "", "[ Properties ]", "", "/sp_reaper/", "\tThe callable used to collect the process status using the system process identifier.", "", "/sp_exit_status/", "\tA mapping of process identifiers to their corresponding exit status returned by", "\t&sp_reaper after an exit event was received.", "", "/sp_processes/", "\tA mapping of process identifiers to user-defined objects used to identify", "\tall the processes associated with the instance.", "", "[ Engineering ]", "While POSIX systems are the target platform, it's still preferrable to", "abstract the concepts. Everything here dealing with signals should be", "accessed through the system context."], ["Join the System process identifier, invocation object, and exit status."], ["Instantiation from an &invocation executed with &invocation.spawn.", "The process' standard I/O must be explicitly designated using", "the &stdin, &stdout, and &stderr parameters.", "Process will be reaped with &..system.execution.reap.", "", "[ Parameters ]", "/invocation/", "\tThe &..system.execution.KInvocation instance to spawn.", "/stdin/", "\tThe file descriptor to map as standard input.", "/stdout/", "\tThe file descriptor to map as standard output.", "/stderr/", "\tThe file descriptor to map as standard error."], ["If the process set isn't terminating, issue SIGTERM", "to all of the currently running processes."], ["Initialize the system event callbacks for receiving process exit events."], ["Interrupt the running processes by issuing a SIGKILL signal to all active processes.", "Exit status will be reaped, but not reported to &self."], ["The exit event of the only process in the set.", "&None if no exit has occurred or the number of processes exceeds one."], ["Return the set of process identifiers that have yet to exit."], ["Whether all the processes have been reaped."], ["Send the given signal number (os.kill) to the active processes", "being managed by the instance."], ["Send the given signal number (os.kill) to the active processes", "being managed by the instance."], ["Interrupt the running processes by issuing a SIGQUIT signal."], ["A local parallel process whose termination is connected to an instance."], ["Initialize the system event callbacks for receiving process exit events."], ["Interrupt the running processes by issuing a SIGKILL signal to all active processes.", "Exit status will be reaped, but not reported to &self."], ["Interrupt the running processes by issuing a SIGQUIT signal."], ["Timer maintenance for recurring tasks.", "", "Usually used for short term recurrences such as animations and status updates.", "Recurrences work by deferring the execution of the configured target after", "each occurrence. This overhead means that &Recurrence is not well suited for", "high frequency executions, but useful in cases where it is important", "to avoid overlapping calls."], ["Enqueue the initial execution of the recurrence."], ["Invoke a recurrence and use its return to schedule its next iteration."], ["Timestamp based transaction scheduling using the system's Real Time clock."], ["Execute the next task given that the period has elapsed.", "If the period has not elapsed, reschedule &transition in order to achieve", "finer granularity."], ["Cancel the given transactions that were scheduled for execution at the given &pit.", "", "Aside from the time and transaction, &Scheduler has no index for identifying", "scheduled events. When such a feature is necessary, an index must be managed", "independently or a subclass must be created."], ["Schedule the &xacts to be executed at the specified Point In Time, &pit."]]