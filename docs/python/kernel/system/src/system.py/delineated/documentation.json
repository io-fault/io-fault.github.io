[["System abstractions and processors for managing a processing tree."], ["Collection of &io.Array instances connecting transfers to &KChannel instances."], ["Transfer events snapshot delivered to I/O tasks."], ["Units sent."], ["The acquire method of the channel if exhausted. &None if not exhausted."], ["Whether or not this is the last event from the Channel."], ["Process the array's transfer and construct a sequence of I/O events.", "", "This is executed inside a thread managed by the interchange and *cannot* deliver", "the events to Transformers. &synchronize_io_events is used to deliver the queue", "for processing in the main task queue."], ["Send the individual &events originally prepared by", "&io_collect to their associated &KInput or &KOutput flows."], ["Inline I/O handler for schduler based transfers."], ["Violently destroy all channels and Arrays in the Matrix.", "", "All arrays allocated by the Matrix will be terminated.", "", "! WARNING:", "\tThis method should *only* be ran *after* forking and *inside the child process*."], ["Execute the Array.force method on the set designated", "of Array instances designated by &id."], ["Terminate all arrays managed by the interchange."], ["Acquire a set of channels accounting for volume limits."], ["Channel moving data in or out of the operating system's kernel."], ["Called by the controlling &Flow, acquire status information and", "unlink the channel."], ["The length of the buffer being transferred into or out of the kernel.", "", "&None if no transfer is currently taking place."], ["Flow that continually allocates memory for a channel transferring data into the process."], ["Transition in the next buffer provided that the Flow was not obstructed."], ["Normally ignored, but will induce a transition if no transfer is occurring."], ["Manage the event connection to a listening socket and process", "read events by accepting and transmitting the socket file descriptors."], ["Receive octets from the system I/O channel."], ["Receive octets from the system I/O channel with limited memory allocations.", "Primarily used to read portions of a file."], ["Transition in the next buffer provided that the Flow was not obstructed."], ["Flow that transfers emitted events to be transferred into the kernel.", "", "The queue is limited to a certain number of items rather than a metadata constraint;", "for instance, the sum of the length of the buffer entries. This allows the connected", "Flows to dynamically choose the buffer size by adjusting the size of the events."], ["Queue entries exceeds limit."], ["Enqueue a sequence of transfers to be processed by the Transit."], ["System Transaction Context implementation providing", "Abstract Processors with access to the local system."], ["Final (executable) transaction exited; system process context complete."], ["Execute all tasks whose wait period has elapsed according to the system's clock."], ["Defer the execution of the (id)`occur` methods on the given &processors", "by the given &measure."], ["Launch an Executable for running application processors."], ["Send an overview of the logical process state to the given target."], ["Schedule the task for execution after the period of time &measure elapses.", "", "&.core.Scheduler instances will resubmit a task if there is a substantial delay", "remaining. When large duration defers are placed, the seconds unit are used", "and decidedly inexact, so resubmission is used with a finer grain."], ["Cancel a scheduled task."], ["Inherit the exports from the given &context."], ["Signal the &Process that I/O occurred for this context."], ["Execute the given function in a thread associated with the specified controller."], ["Access the environment from the perspective of the context.", "Context overrides may hide process environment variables."], ["Override an environment variable for the execution context.", "", "Child processes spawned relative to the context will inherit the overrides."], ["Returns a sequence of file descriptors that can later be acquired by a Matrix."], ["Given an endpoint and a transport stack, return the series used to", "manage the connection's I/O.", "", "[ Parameters ]", "", "/endpoint/", "\tThe &.library.Endpoint instance describing the target of the connection."], ["Given a file descriptor and a transport stack, return the series used to", "manage the connection's I/O.", "", "[ Parameters ]", "/fd/", "\tSocket file descriptor."], ["Construct a channel for reading an entire file from the filesystem.", "The returned channel terminates when EOF occurs; often,", "&read_file_range is preferrable to avoid status inconsistencies."], ["Construct a channel for writing to the file identified by &path."], ["Construct a channel to read a specific range of a file."], ["Open a set of files for appending through a &.library.KernelPort."], ["Allocate a channel for overwriting data at the given offset of", "the designated file."], ["On POSIX systems, this performs (system/manual)`bind` *and*", "(system/manual)`listen` system calls for receiving socket connections.", "", "Returns a generator producing (interface, KAccept) pairs."], ["Construct a Channel processor that emite accepted listening sockets."], ["Allocate channel instances for the given sequence", "of file descriptors."], ["Allocate channel instances for the given sequence", "of file descriptors."], ["Execute the &..system.execution.KInvocation instance with stdin and stdout closed.", "", "Returns the process identifier and standard error's file descriptor as a tuple."], ["Execute the &..system.execution.KInvocation instance with stdin and stdout closed.", "The &stderr parameter will be passed in as the standard error file descriptor,", "and then *closed* before returning.", "", "Returns a &Subprocess instance containing a single Process-Id.", "", "Used to launch a daemon with a specific standard error for monitoring purposes."], ["Execute the &..system.execution.KInvocation inheriting standard input, output, and error.", "", "This is used almost exclusively by shell-type processes where the calling process", "suspends TTY I/O until the child exits."], ["Construct a new Flow with an initial Iterate Transformer", "flowing shared memory segments from the memory mapped file.", "", "Returns a pair, the new Flow and a callable that causes the Flow to begin", "transferring memory segments.", "", "[ Parameters ]", "/path/", "\tLocal filesystem path to read from.", "/range/", "\tA triple, (start, stop, size), or &None if the entire file should be used.", "\tWhere size is the size of the memory slices to emit."], ["Dispatch a local parallel process."], ["Thread manager for processes; thread pool with capacity to manage dedicated threads."], ["Normally used after a process fork in the child."], ["Create a dedicated thread and execute the given callable within it."], ["Create a dedicated thread that is identified as a critical resource where exceptions", "trigger &process.Critical exceptions in the main thread.", "", "The additional &context parameter is an arbitrary object describing the resource;", "often the object whose method is considered critical."], ["Add a thread to the fabric.", "This expands the \"parallel\" capacity of a &Process."], ["Manage the execution of a thread."], ["Whether or not the given thread [identifier] is executing in this Fabric instance."], ["The representation of the system process that is running. Usually referred", "to as `process` by &Context and other classes.", "", "Usually only one &Process is active per-process, but it can be reasonable to launch multiple", "in order to perform operations that would otherwise expect its own space.", "", "[ Properties ]", "", "/fabric/", "\tThe &Fabric instance managing the threads controlled by the process."], ["Resolve the current logical process based on the thread's identifier.", "&None is returned if the thread was not created by a &Process."], ["Return the primary &.library.Unit instance associated with the process."], ["Append only access to a *critical* process log. Usually points to &sys.stderr and", "primarily used for process related issues."], ["Boot the Process with the given tasks enqueued in the Task queue.", "", "Only used inside the main thread for the initialization of the", "controlling processor."], ["Terminate the process closing the task queue and running the invocation's exit."], ["Initialize the Process instance using the designated &identifier.", "The identifier is essentially arbitrary, but must be hashable as it's", "used to distinguish one &Representation from another. However,", "usually there is only one process, so \"root\" or \"main\" is often used.", "", "Normally, &execute is used to manage the construction of the", "&Process instance."], ["Tear down the existing logical process state. Usually used internally after a", "physical process fork."], ["Handler for untrapped exceptions."], ["Reset the process global state of &.system."], ["Default exit callback used to interrupt main thead task queue.", "", "Sets the module attribute &main_thread_exit_status to the given status and closes the main task queue."], ["Construct a &Process using the given &executables.", "The &identifier is usually `'root'` for the primary logical process."], ["Dispatch an application context instance within a new logical process.", "", "Construct a &Process and &core.Executable for executing the &application context.", "The &Process created by the inner &spawn is returned."], ["Connect the system process termination signal to root transaction terminate."], ["Control the main thread providing a low precision timer for deferred tasks.", "Called by an application's main entry point after booting the &Process created", "by &spawn."]]