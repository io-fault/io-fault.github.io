[["Formatting and parsing tools for status frame transport envelopes.", "", "This module provides conceptual definitions for Status Frame events (&types.EStruct) and", "I/O operations supporting the transmission of those events.", "", "Status Frames are &types.Frame instances that can be serialized into and parsed from a data stream.", "", "[ Usage ]", "", "The operation used to serialize and load the data extension is decoupled, so an allocation", "function is provided to apply the defaults for the data extension transport:", "#!syntax/python", "\tfrom fault.status import frames", "", "Frame envelopes may or may not have content (data extensions):", "#!syntax/python", "\tmsg = compose('!#', \"ERROR: no such resource\")", "\tsys.stdout.write(frames.sequence(msg))", "", "\t\"[!# ERROR: no such resource]", "\"", "", "Serialized messages are expected to include the trailing newline:", "#!syntax/python", "\tfor line in sys.stdin.readlines():", "\t\tmsg = frames.structure(line)", "", "[ Properties ]", "", "/protocol/", "\tString identifying the status frames protocols.", "", "/ttyn1_minimum_overhead/", "\tInformative minimum size regarding tty-notation-1 status frames."], ["Create a status frame using the envelope's symbol and synopsis."], ["Convert a two-character type code symbol into an unsigned 32-bit integer.", "Currently, only supporting unicode characters in the 16-bit range."], ["Convert an integer type code into the two-character string used for serialization and display."], ["Pack a status frame for transmission.", "", "Constructs a triple containing the leading envelope string,", "the encoded bytes of data extending the frame and the terminating trailer."], ["Pack a status frame into a &str for transmission.", "", "Constructs a single &str instance.", "", "[ Parameters ]", "", "/frame/", "\tThe status frame to be represented in serial form."], ["Unpack a serialized status frame."], ["Extract a status frame, &types.Frame, from the given &line.", "", "[ Parameters ]", "", "/line/", "\tA single serialized line."], ["Construct a custom protocol declaration message."], ["Return the slices marking the areas before and after the first item", "contained in &arrows.", "", "&None if no items in &fields are contained in &arrows."]]