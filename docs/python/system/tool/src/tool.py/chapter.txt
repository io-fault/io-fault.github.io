! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 36 0`
		- (coverage-zeros)`1`
		- (coverage-counters)`19`
Tool execution factor for explicitly linked command sets.


[ sys ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 10`

[ importlib ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 16`

[ process ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`6 1 6 21`

[ _select_methods ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 20`
#!source
	_select_methods = []

[ extend ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`10 1 18 31`
		- (coverage-zeros)`0`
		- (coverage-counters)`2`
(signature)`extend(*select)`

Add lookup functions for extending the set of executable tools.

When a (factor-local/parameter)&<#extend.Parameters.select[select]> callable is invoked with a tool name, a module path should be
returned identifying the executable or a (invalid/unknown)&<#LookupError> should be raised designating
that no match could be made.


[ query ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`20 1 27 74`
		- (coverage-zeros)`1`
		- (coverage-counters)`5`
(signature)`query(name)`


[ main ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`29 1 36 49`
		- (coverage-zeros)`0`
		- (coverage-counters)`6`
		- (type/syntax)`process.Exit`
		- (type/project-local/factor-element)&<process#Exit[fault.system.process.Exit]>
		
(signature)`main(inv)`

