[["Memory management classes for implementing usage constraints", "in parts of processes."], ["bytearray subclass supporting weak-references and", "identifier hashing for memory-free signalling."], ["Object Identifier based hash for allowing indexing of allocated instances."], ["Memory pool that uses weakref's and context managers to reclaim memory."], ["Construct a Reservoir from the given number of Mebibytes desired."], ["Memory units currently in use."], ["Number of memory units available."], ["Allocate a unit of memory for use. When Python references to the memory object", "no longer exist, another unit will be added."], ["Explicitly add an object to the available segments."], ["Iterate over the slices of an active memory map;", "Weak references of the slices are held to track when", "its appropriate to close the memory map."], ["Open the file at the given path in read-only mode and", "create a &Segments providing a &MemoryMap interface", "to the contents."], ["Initialize an instance using the given &memory. An instance", "created by &MemoryMap.", "", "[ Parameters ]", "/memory/", "\tThe `mmap.mmap` instance defining the total memory region."], ["Manage the final stages of &Segments deallocation by transitioning", "to a finalization process where &select methods can no longer occur,", "and existing &memoryview's referencing &self, &weaks, are", "used to construct a sequence of &weakref.finalize callbacks.", "", "Once in the final stage, a count of outstanding &memoryview instances", "is tracked and decremented with &decrement until there are no more references", "to the &Segments allowing the file descriptor associated with &memory to be closed."], ["Used internally by &__del__ to manage the deallocation process", "when there are outstanding references to the memory mapped region."], ["Constructs an iterator to the parameterized range over the", "&memory the &Segments instance was initialized with."], ["Return an iterator to the entire region in sixteen kilobyte sizes."]]