[["System kernel and Python runtime interfaces."], ["Close the file descriptors produced by the iterable."], ["Preserve the given file descriptors across process image substitutions(exec)."], ["Configure the file descriptors to be released when the process is substituted(exec)."], ["Retrieve the hostname of the system using gethostname(2)."], ["Retrieve the system name and instruction architecture of the runtime using uname(2)."], ["Retrieve the (system/manual)`sysconf` value of (id)`SC_CLK_TCK`."], ["Configure an atexit call to force the process to exit via a signal."], ["Initialize the after fork callbacks.", "Called once by &.process. Do not use directly."], ["File descriptor vector."], ["Event data union and scheduling identity."], ["A string identifying the type of event."], ["A file descriptor identifying the source of events."], ["For I/O, a file descriptor identifying the cited opposition of &port.", "May be `-1`."], ["Position independent access to the file descriptor identifying the receive side.", "", "For (id)`io-transmit` events, this is the &correlation.", "For (id)`io-receive` events, this is the &port."], ["Position independent access to the file descriptor identifying the transmit side.", "", "For (id)`io-transmit` events, this is the &port.", "For (id)`io-receive` events, this is the &correlation."], ["Construct an event that will occur upon the actuation of the &Scheduler", "instance that the operation was dispatched on."], ["Construct an event that will occur upon the termination of the &Scheduler", "instance that the operation was dispatched on."], ["Construct an event that is known to never occur."], ["Construct an event that will occur after the specified duration occurs."], ["Construct an event identifier that will occur when process identified", "by &pid exits. If &procfd is given on supporting systems, it will", "be used instead of allocating one or using the &pid directly."], ["Construct an event identifier that will occur when the host process", "receives the cited signal. If &sigfd is given on supporting systems, it", "will be used instead of allocating one or using the &signo directly."], ["Construct an event identifier that will occur when the status of the", "file identified by &path, or &fileno, has changed."], ["Construct an event identifier that will occur when the file identified", "by &path, or &fileno, is modified."], ["Construct an event identifier that will occur when the file identified", "by &path, or &fileno, is deleted."], ["Event identifier that occurs when writes are possible", "on the given &port file descriptor."], ["Event identifier that occurs when reads are possible", "on the given &port file descriptor."], ["An operation record to be dispatched by a &Scheduler instance."], ["User storage slot intended to hold a reference to the object that created the &Link."], ["The original event that the &Link was planned using."], ["The object that will be executed when the event occurs."], ["Whether or not the operation was dispatched with the expectation of", "multiple occurrences."], ["Whether or not the operation has been removed from the scheduled set."], ["Whether or not the operation has been scheduled."], ["Whether or not the operation is currently executing."], ["Kernel event management and task queue."], ["Construct a snapshot of the dispatched operations."], ["Immediately destroy the resources held by the scheduler."], ["Whether the scheduler has been closed."], ["Close the scheduler causing events from the kernel to no longer be retrieved."], ["Wait for events from the source(operating system) and enqueue their associated", "tasks for execution.", "", "[ Returns ]", "The count of events that were received from the kernel."], ["Interrupt a blocking &wait call.", "Nothing if there is no concurrent &wait call.", "", "[ Returns ]", "Whether or not a &wait call was interrupted.", "&None if the &Scheduler instance is closed."], ["Execute enqueued tasks, FIFO.", "Concurrent calls with &wait are prohibited.", "", "[ Parameters ]", "/trap/", "\tCallable performed when a task raises an exception.", "\t&trap will be given the task and a normalized exception instance.", "", "\tIf &None, exceptions will be discarded.", "", "[ Returns ]", "The count of tasks that were executed."], ["Execute the operation when its associated event occurs.", "", "[ Parameters ]", "/operation/", "\tThe &Link instance to attach to kernel events."], ["Remove the operation from the scheduled set."], ["Schedule the &task for immediate execution by &execute."]]