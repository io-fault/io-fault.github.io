[["Get the name of the errno.",""],["Set a Python error from the `errno` associated with the port.",""],["Return a Python error from the `errno` associated with the port.",""],["String representation suitable for text based displays.",""],["Datagrams (struct)&Channel Structure.",""],["Requires GIL.",""],["Requires GIL. Decrements the link reference and sets the field to &NULL.",""],["Iterator created by &.kernel.Array.transfer().","","Given that this is restricted to iteration\u002c","the type is *not* exposed on the module.",""],["Subject &Array producing events.",""],["Position in transfer linked list.",""],["Iterator protocol next implementation.",""],["Acquire a resource for faciliting a transfer. Qualifies the Channel for transfers.","","The given &resource object is set on the &Channel and the memory buffer is filled","out based on the direction of the channel. If the Channel has been acquired","by a &Array\u002c the Channel will be marked and enqueued for a subsequent transfer","attempt. Otherwise\u002c the Channel is qualified for transfer allowing the subsequent","&array_acquire to ready a transfer.",""],["Create a pair of Objects and put them in a tuple to be returned.",""],["Same as allocio\u002c but the Ports for each Channel are distinct objects.","(os.pipe()\u002c dup() pairs.",""],["Structure for &.kernel.DatagramArray providing access","to the composition of datagrams to be emitted or received.",""],["Number of entries in &indexes.",""],["Address Length of endpoints.",""],["Packet Family of endpoints.",""],["Address Space of endpoints.",""],["Current transfer.",""],["The indexes to the Datagrams held by the Array inside","the buffer\u002c `data`.",""],["Note tev_join events on all Channels.","","Run before array_transfer_delta to have all","Channel's corresponding kevent filter to be loaded.",""],["Enqueue the delta into the lltransfer list.",""],["Process delta and setup for event processing",""],["Transform the collected events into local Channel state.","Place actionable events onto their respective transfer list.",""],["Collect and process events.",""],["Return an iterable to the collected events. &.kernel.Array.transfer",""],["Close file descriptors and release references; destroy entire ring.",""],["Begin a transfer processing cycle.",""],["Close a transfer processing cycle.",""]]