[[["__control_lock__"], ["__interject_lock__"], ["controlled"], ["current_process_id"], ["parent_process_id"], ["main_thread_id"], ["index"], ["__fork_lock__"], ["fork_prepare_callset"], ["fork_parent_callset"], ["fork_child_callset"], ["fork_child_cleanup"], ["getattr"], ["signal_codes"], ["signals"], ["signal_names"], ["fatal_signals"], ["signal_identifiers"], ["Exit", "unspecified_status_code"], ["Exit", "usage_query_code"], ["Invocation", "args"], ["Critical", "__kill__"], ["Interruption", "__kill__"]], [{"syntax": "thread.amutex()", "area": [[30, 20], [30, 34]]}, {"syntax": "thread.amutex()", "area": [[33, 22], [33, 36]]}, {"syntax": "__control_lock__.locked", "area": [[37, 14], [37, 36]]}, {"syntax": "os.getpid()", "area": [[40, 22], [40, 32]]}, {"syntax": "os.getppid()", "area": [[43, 21], [43, 32]]}, {"syntax": "thread.identify()", "area": [[46, 18], [46, 34]]}, {"syntax": "{\n\t'root': ('thread', thread.identify(), None),\n}", "area": [[47, 9], [49, 1]]}, {"syntax": "thread.amutex()", "area": [[52, 17], [52, 31]]}, {"syntax": "set()", "area": [[56, 24], [56, 28]]}, {"syntax": "set()", "area": [[60, 23], [60, 27]]}, {"syntax": "set()", "area": [[65, 22], [65, 26]]}, {"syntax": "set()", "area": [[69, 22], [69, 26]]}, {"syntax": "getattr", "area": [[71, 9], [71, 15]]}, {"syntax": "{\n\t'process/suspend': signal.SIGTSTP,\n\t'process/resume': signal.SIGCONT,\n\t'process/stop': signal.SIGSTOP,\n\t'process/continue': signal.SIGCONT,\n\t'process/terminate' : signal.SIGTERM,\n\t'process/quit' : signal.SIGQUIT,\n\t'process/interrupt' : signal.SIGINT,\n\t'process/kill' : signal.SIGKILL,\n\n\t'limit/cpu': signal.SIGXCPU,\n\t'limit/file': signal.SIGXFSZ,\n\t'limit/time': signal.SIGVTALRM,\n\n\t'terminal/stop': signal.SIGTSTP,\n\t'terminal/query': getattr(signal, 'SIGINFO', None) or getattr(signal, 'SIGUSR1', None),\n\t'terminal/delta': getattr(signal, 'SIGWINCH', None),\n\t'terminal/closed': signal.SIGHUP,\n\t'terminal/background-read': signal.SIGTTIN,\n\t'terminal/background-write': signal.SIGTTOU,\n\n\t'user/1': signal.SIGUSR1,\n\t'user/2': signal.SIGUSR2,\n\n\t'exception/floating-point': signal.SIGFPE,\n\t'exception/broken-pipe': signal.SIGPIPE,\n\n\t'error/invalid-memory-access': signal.SIGBUS,\n\t'error/restricted-memory-access': signal.SIGSEGV,\n\t'error/invalid-instruction': signal.SIGILL,\n\t'error/invalid-system-call': signal.SIGSYS,\n}", "area": [[73, 16], [104, 1]]}, {"syntax": "signal_codes", "area": [[105, 11], [105, 22]]}, {"syntax": "dict([(v, k) for k, v in signal_codes.items()])", "area": [[108, 16], [108, 62]]}, {"syntax": "{\n\tsignal.SIGINT,\n\tsignal.SIGTERM,\n\tgetattr(signal, 'SIGXCPU', None),\n\tgetattr(signal, 'SIGXFSZ', None),\n\tgetattr(signal, 'SIGVTALRM', None),\n\tgetattr(signal, 'SIGPROF', None),\n\tgetattr(signal, 'SIGUSR1', None),\n\tgetattr(signal, 'SIGUSR2', None),\n}", "area": [[112, 17], [121, 1]]}, {"syntax": "{\n\tgetattr(signal, name): name\n\tfor name in dir(signal)\n\tif name.startswith('SIG') and name[3] != '_' and isinstance(getattr(signal, name), int)\n}", "area": [[124, 22], [128, 1]]}, 255, 200, {"syntax": "argv", "area": [[269, 9], [269, 12]]}, true, true]]