[["Python Execution Context support functions and classes."], ["Route for Python imports."], ["Return a new &Import to the package containing the module that is executing", "&from_context."], ["Given a valid `__name__`, return an &Import instance to that path."], ["Given module containing a valid `__name__`, return an &Import", "instance to that path."], ["Create a &Route and an attributes sequence based on the given &path such that", "the &Route is the &real portion of the &path and text following real module", "path is the sequence of attributes."], ["Whether or not the Path contains the given Pointer."], ["Return the absolute path of the module Route; dot separated module names."], ["The module's name relative to its package; node identifier used to refer to the module.", "Alias to &identifier."], ["Return a &Route to the module's package.", "If the &Route is referencing a package, return &self.", "", "! WARNING:", "\tThis will be a method."], ["The loader of the module."], ["The spec for loading the module."], ["Whether or not the module exists inside the Python paths.", "However, the module may not be importable."], ["Interrogate the module's loader as to whether or not it's a \"package module\"."], ["The \"real\" portion of the Import.", "Greatest Absolute Route that *actually exists* on the file system.", "", "&None if no parts are real, and &self if the entire route exists."], ["Return the modification time of the module's file as a chronometry Timestamp."], ["Return a list of module objects. The first being the outermost package module, the", "last being the module being pointed to, subject module, and the between being the", "packages leading to the &self."], ["Scan the &stack of modules for the given attribute returning a pair", "containing the module and the object accessed with the &attribute."], ["Return the module that is being referred to by the path."], ["Return a pairs of sequences containing routes to the subnodes of the route."], ["Return a package's full tree as a pair of lists."], ["Get the &files.Path instance pointing to the module's file."], ["The package directory of the module."], ["The (filename)`__pycache__` directory associated with the module's file."], ["Field reference for passing by reference.", "", "Primarily used in cases where the origin of a value should be retained", "for structural purposes or origin tracking.", "", "! DEVELOPMENT: Location", "\tMay not be the appropriate location for this class.", "\tWhile an environment variable references are the primary use-case,", "\tthere are certainly others.", "", "\tAlso, &Selector might be a more appropriate baseclass;", "\tload instead of value, store for update/overwrite."], ["Process the iterator producing References or values such that", "values are emitted directly and references are only emitted", "if their determined value is not None."], ["Return the string form of the container's value for the configured", "key when present, otherwise the configured default.", "", "If the resolved value is &None, an empty string will be returned."], ["Return the &identifier - &value pair."], ["Return &item in plural form; iterator that always returns a single pair."], ["Return the value of the container's entry using &identifier as the key.", "If no key exists, &default will be returned."]]