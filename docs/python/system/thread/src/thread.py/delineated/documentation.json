[["System thread primitives.", "", "/create/", "\tCreate a new thread and run the given callable inside of it.", "/amutex/", "\tAllocate a synchronization primitive.", "/identify/", "\tAcquire an identifier to the executing thread."], ["Exception used to signal thread kills."], ["Select a set of threads from the same snapshot of frames."], ["Raise the given exception in the thread with the given identifier, &tid.", "", "The thread being interrupted will be signalled after the exception has been set.", "This helps ensure that system calls will not stop the exception from being raised", "in order to kill the thread.", "", "! WARNING:", "\tCases where usage is appropriate is rare. Managing the interruption", "\tof threads in this fashion is only appropriate in certain applications.", "", "[ Parameters ]", "", "/tid/", "\tThe thread's low-level identifier to interrupt.", "/exception/", "\tThe exception that is raised in the thread."], ["Select the frame of the thread's identifier.", "", "[ Parameters ]", "/tid/", "\tIdentifier of the thread returned by &create_thread or &identify_thread.", "\tReturns &None when the thread is not running."], ["A synchronization mechanism used to perform a single transfer between threads.", "Alternatively described as a queue with a transfer limit of one item."], ["Commit to the transition. If the object", "hasn't been placed, block until it is.", "", "A RuntimeError will be raised upon multiple invocations of commit."], ["Send &message to the receiving thread."]]