[[["iana_registered_types"], ["types"], ["Type", "__slots__"], ["Range", "__slots__"], ["any_type"], ["any_range"], ["type_from_bytes"], ["type_from_string"], ["range_from_string"]], ["https://www.iana.org/assignments/media-types/media-types.xml", {"syntax": "{\n\t'data': 'application/octet-stream', # browsers interpret this as a file download\n\t'fail': 'application/failure+xml',\n\n\t'python-pickle': 'application/x-python-object+pickle',\n\t'python-marshal': 'application/x-python-object+marshal',\n\t'python-xml': 'application/x-python-object+xml', # fault.xml format\n\t# 'structures': 'application/x-conceptual+xml',\n\n\t'text': 'text/plain',\n\t'txt': 'text/plain',\n\t'rtf': 'application/rtf',\n\n\t'cache': 'text/cache-manifest',\n\t'html': 'text/html',\n\t'htm': 'text/html',\n\t'css': 'text/css',\n\n\t'pdf': 'application/pdf',\n\t'postscript': 'application/postscript',\n\n\t'javascript': 'text/plain;pl=javascript',\n\t'py': 'text/plain;pl=python',\n\n\t# Recommended types for .js files.\n\t'json': 'application/json',\n\t'js': 'application/javascript',\n\n\t'xml': 'text/xml',\n\t'sgml': 'text/sgml',\n\n\t'rdf': 'application/rdf+xml',\n\t'rss': 'application/rss+xml',\n\t'atom': 'application/atom+xml',\n\t'xslt': 'application/xslt+xml',\n\t'xsl': 'application/xslt+xml',\n\n\t'zip': 'application/zip',\n\t'gzip': 'application/gzip',\n\t'gz': 'application/gzip',\n\t'bzip2': 'application/x-bzip2',\n\t'tar': 'application/x-tar',\n\t'xz': 'application/x-xz',\n\t'rar': 'application/x-rar-compressed',\n\t'sit': 'application/x-stuffit',\n\t'z': 'application/x-compress',\n\n\t'tgz': 'application/x-tar+gzip',\n\t'txz': 'application/x-tar+x-xz',\n\t'torrent': 'application/x-bittorrent',\n\n\t# images\n\t'svg': 'image/svg+xml',\n\t'png': 'image/png',\n\t'gif': 'image/gif',\n\t'tiff': 'image/tiff',\n\t'tif': 'image/tiff',\n\t'jpeg': 'image/jpeg',\n\t'jpg': 'image/jpeg',\n\n\t# video\n\t'mpg': 'video/mpeg',\n\t'mpeg': 'video/mpeg',\n\t'mp2': 'video/mpeg',\n\t'mov': 'video/quicktime',\n\t'mp4': 'video/mp4',\n\t'webm': 'video/webm',\n\t'ogv': 'video/ogg',\n\t'avi': 'video/avi',\n\n\t# audio\n\t'mp3': 'audio/mpeg',\n\t'mid': 'audio/midi',\n\t'wav': 'audio/x-wav',\n\t'aif': 'audio/x-aiff',\n\t'aiff': 'audio/x-aiff',\n\n\t'ogg': 'audio/ogg',\n\t'opus': 'audio/ogg',\n\t'oga': 'audio/ogg',\n\t'ogx': 'application/ogg',\n\t'spx': 'audio/ogg',\n\n\t# microsoft\n\t'xls': 'application/vnd.ms-excel',\n\t'doc': 'application/msword',\n\t'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t'ppsx': 'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n\t'potx': 'application/vnd.openxmlformats-officedocument.presentationml.template',\n}", "area": [[42, 9], [133, 1]]}, [], [], {"syntax": "Type(('*', '*', frozenset()))", "area": [[394, 12], [394, 40]]}, {"syntax": "Range([(100, any_type)])", "area": [[395, 13], [395, 36]]}, {"syntax": "functools.lru_cache(32)(Type.from_bytes)", "area": [[398, 19], [398, 58]]}, {"syntax": "functools.lru_cache(32)(Type.from_string)", "area": [[399, 20], [399, 60]]}, {"syntax": "functools.lru_cache(32)(Range.from_string)", "area": [[400, 21], [400, 62]]}]]