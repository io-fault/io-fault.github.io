[["Endpoint and Service type for referencing internet addresses for", "Internet Protocol version 4 and 6."], ["Internet port identifier. Empty subclass for identification purposes."], ["Whether or not the Service port is within the standard range."], ["Whether or not the Service port is considered a 'well known' port."], ["Whether or not the Service port is considered an 'ephemeral' port by IANA."], ["A precise Endpoint for internet addresses and local sockets."], ["Create an IPv4 Endpoint Instance"], ["Create an IPv6 Endpoint Instance"], ["Addressing protocol; 4 or 6"], ["The &ipaddress typed address."], ["The &Service of the endpoint."], ["\"<address>:<port>\" representation suitable for interpolation into", "an IRI network location."], ["Create an IPv4 or IPv6 endpoint based on the type detected from the string.", "", "The &ipaddress type will be selected by the &ipaddress.ip_address function."], ["A domain name referencing a set of endpoints.", "", "References are actually service references for a specific domain. They", "consist of protocol, address, port, and service fields that define", "the reference. Normally, protocol is \"dns\" and implies system DNS.", "", "Protocol variations can be used to describe more complicated name resolutions."], ["Resolution protocol to use to extract endpoints from &address. Usually, `'internet-names'`."], ["The unencoded domain name."], ["The resolved or overridden port for the service.", "Usually, this is &None as the &service will refer to the desired &Service port", "or the resolver will manage a "], ["The actual service name being referred to.", "Used by resolvers that support service name resolution."], ["Formatted reference for canonical printing.", "Return \"<service>:[<protocol>]<name>:<port>\"."], ["Construct an &Endpoint or &Reference from &struct.", "", "#!/pl/python", "\tUsual case:", "\tfrom fault.internet import ri", "\ttarget = host.realize(ri.parse(url))"]]