[["Nested generator based HTML/XML serialization module.", "", "Provides primitives for generating XML using nested generators.", "", "[ Properties ]", "/namespaces/", "\tCommon namespace labels for various XML namespaces."], ["Escape bytes instances for storage inside an XML element.", "&bytes instances are yielded out as there may be a series of", "CDATA sections, and &element works with iterators when dealing", "with content.", "", "This returns an iterable suitable for use by &element."], ["Escape and encode an arbitrary string for storage inside an", "XML element body. This depends on &escape_element_bytes", "and has the same limitations with respect to control characters.", "", "This returns an iterable suitable for use by &element."], ["Escape the given string for inclusion in an attribute value.", "Does *not* encode the result string.", "", "! WARNING:", "\tThis function only escapes ampersands, less-than comparison", "\tcharacters, and quotes. Low-ASCII will not be escaped and must", "\tbe processed by a distinct function. This should only be used in cases", "\twhere the source is known to not produce low-ASCII."], ["Construct an XML attribute from the identifier and its value.", "", "Does not encode the result string, and attribute values are subjected", "to the effect of &escape_attribute_string.", "", "Returns a &str as they are normally interpolated inside &encode_element."], ["Return an iterable to an empty element."], ["Generate an entire element populating the body by yielding from the given content."], ["Base class for XML serialization instances.", "Used to localize encoding bindings and default element prefixes.", "", "After a Serialization instance is initialized,", "the &element and &escape attributes will be available for use", "as they depend on the encoding. Serialization is strictly concerned", "with the binary emission of a document built for nested iterators.", "", "[ Properties ]", "", "/xml_prefix/", "\tThe prefix to use when serializing elements with &prefixed.", "/xml_encoding/", "\tThe encoding to use when serializing &str objects."], ["Initialize the serializer to write XML data in the given encoding."], ["Construct and return an ASCII encoded string representing", "the declaration consistent with the Serialization context.", "", "[ Parameters ]", "", "/standalone/", "\tThe `standalone` attribute for the declaration."], ["Encode the given string in the configured encoding with `'xmlcharrefreplace'`", "on errors.", "", "Returns the encoded string in a tuple for placement into &element calls."], ["Construct an empty XML element with the attributes", "defined by parameters."], ["Create another &Serialization instance using a different prefix."], ["Serialize an element with the exact &element_name with the contents of", "&subnode_iterator as the inner nodes. &subnode_iterator must produce", "&bytes encoded objects."], ["Serialize an element using &element, but prefix the element name with", "prefix configured at &xml_prefix.", "", "The configured prefix may or may not be an XML namespace."], ["Emit an XML Processing Instruction.", "", "Processing Instruction productions are different than &element", "productions as a single string is returned rather than an iterator."], ["Construct the root element of a document."], ["Create a literal element used to represent a disallowed XML character.", "", "Strict XML processing implementations may disallow many low-ascii characters,", "*even when encoded as an entity*. This restriction is problematic as it", "requires some compensation when working with binary data.", "", "&literal provides a way to escape any octet for encoding purposes. The given", "oridinal will be returned as an element in the `l` namespace. When serializing", "XML output that exercises &literal, the (xmlns:label)`l` namespace must be defined", "ahead of time."], ["Emit a text node without escaping contents.", "Encoding errors will be raised."], ["Escape the given &string and encode it in the configured encoding."], ["Emit the default hyperlink attribute representation."]]