[["Implementation of the route base class and route tools.", "", "The primary class, &PartitionedSequence, is essentially a unrolled linked list", "leveraging Python's reference counting to allow sharing of routes and segments", "across instances.", "", "Direct use of this class is likely inappropriate. Either &.types.Selector or &.types.Segment", "should be subclassed in order to convey the presence of a target resource."], ["Route implementation class managing the path as a partitioned sequence.", "", "The stored sequences are usually tuples that are connected to a Context", "instance defining the preceeding points in the path. The intent of the", "structure is to allow path sharing for reducing memory use when working", "with long paths. However, this is not done automatically and the exact", "usage must be aware of how &context can eliminate redundant leading segments."], ["The relative positioning of &self with respect to &target.", "Provides the necessary information to form a relative path to &target from &self.", "", "Returns the number of steps to ascend and the sequence of identifiers to apply in", "order to arrive at &target."], ["Construct a new instance from an iterable of partitions in root order."], ["Construct a new route relative to &self.context."], ["Create a new partitioned sequence designating &self as the context.", "", "If the context-relative path of &self is an empty sequence, &self is returned exactly."], ["Produce the *partitions* of the sequence in inverse order.", "", "The identifiers *inside* the partitions will be in root order."], ["Construct a sequence of partitions in root order.", "Result is a suitable parameter for &from_partitions."]]