! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 949 32`
		- (coverage-zeros)`0`
		- (coverage-counters)`0`
Join delineated source data into a text file for subsequent rendering.


[ json ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 11`

[ sys ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 10`

[ typing ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`6 1 6 13`

[ collections ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 18`

[ comethod ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 34`

[ tools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`10 1 10 31`

[ string ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 11 32`

[ process ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`13 1 13 32`

[ files ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`14 1 14 30`

[ lsf ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`15 1 15 39`

[ Area ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`16 1 16 44`

[ Address ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`16 1 16 44`

[ render ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`18 1 18 29`

[ structure_chapter_lines ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`19 1 19 49`

[ ipara ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`20 1 20 62`

[ Paragraph ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`21 1 21 48`

[ Fragment ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`21 1 21 48`

[ setdirectory ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`23 1 23 34`

[ query ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`24 1 24 19`

[ itruncate ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`26 1 44 2`
(signature)`itruncate(lines)`

Truncate the minimum common indentation in (factor-local/parameter)&<#itruncate.Parameters.lines[lines]>.


[ interpret_directory_items ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`46 1 50 2`
(signature)`interpret_directory_items(items)`


[ prefix ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`52 1 76 21`
(signature)`prefix(path, element)`

Adjust the sections in (factor-local/parameter)&<#prefix.Parameters.element[element]> to be relative to (factor-local/parameter)&<#prefix.Parameters.path[path]>.


[ extract ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`78 1 91 40`
(signature)`extract(sub, section)`

Extract the mapping from the identified (factor-local/parameter)&<#extract.Parameters.section[section]> removing its element from the tree.


[ section_items ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`93 1 103 55`
(signature)`section_items(chapter, section)`

Get the first directory in (factor-local/parameter)&<#section_items.Parameters.section[section]> and its interpreted items.


[ insert_before ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`105 1 111 25`
(signature)`insert_before(type, elements, element)`


[ control ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`113 1 126 2`
(signature)`control(**kw)`

Construct a CONTROL admonition element.


[ type_property_fragments ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`128 1 145 75`
(signature)`type_property_fragments(resolve, element)`

Construct (remote/factor-element)&<http://fault.io/python/text/types#Fragment[fault.text.types.Fragment]> instances for populating a property set to describe the type.


[ describe_type ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`147 1 163 60`
(signature)`describe_type(resolve, element)`

Produce tuples used to form `'item'` paragraphs describing the type
element found within (factor-local/parameter)&<#describe_type.Parameters.element[element]>.


[ property_item ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`165 1 169 59`
(signature)`property_item(pf)`

Construct single paragraph item elements for populating a set or sequence element.


[ documented_field_item ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`171 1 197 9`
(signature)`documented_field_item(cast, resolve, context, element, identifier, documentation)`

Construct the directory item element for a documented field.


[ undocumented_field_item ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`199 1 224 9`
(signature)`undocumented_field_item(cast, resolve, context, element, identifier)`

Construct the directory item element for representing an undocumented field.
The (factor-local/parameter)&<#undocumented_field_item.Parameters.documentation[documentation]> parameter is provided for type consistency with (factor-local/function)&<#documented_field_item[documented_field_item]>.


[ Text ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`226 1 550 18`
! INHERIT:
	- (control)`property-set`
	- (source/area)`226 12 226 26`
	- (type/syntax)`comethod.object`
	- (type/remote/factor-element)&<http://fault.io/python/context/comethod#object[fault.context.comethod.object]>
	
Linked chapter construction for factor elements.


[ Text >> getdoc ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`231 2 240 10`
(signature)`getdoc(self, path)`


[ Text >> setdocs ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`242 2 247 3`
(signature)`setdocs(self, path, cursor)`


[ Text >> r_control ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`249 2 290 12`
(signature)`r_control(self, path, factorelement, **ctlkeys)`


[ Text >> r_root ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`292 2 312 39`
(signature)`r_root(self, factor)`


[ Text >> r_inherits ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`314 2 340 23`
(signature)`r_inherits(self, path, element)`


[ Text >> r_container ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`341 2 386 52`
(signature)`r_container(self, path, element)`


[ Text >> r_parameters ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`388 2 404 5`
(signature)`r_parameters(self, element, path, parameters, documented)`


[ Text >> section ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`406 2 411 21`
(signature)`section(self, rdepth, rmult, path)`


[ Text >> r_void ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`412 2 419 21`
(signature)`r_void(self, path, element)`

Unsupported element type.


[ Text >> r_text ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`420 2 429 18`
(signature)`r_text(self, path, element)`

Rewrite references in the text tree and render the changes.


[ Text >> r_source ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`430 2 452 17`
(signature)`r_source(self, path, element)`

Render a capture of the source after the documentation.


[ Text >> r_element ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`454 2 517 31`
(signature)`r_element(self, path, element)`

Emit a section containing the element's documentation.

The default switch target.


[ Text >> switch ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`519 2 529 22`
(signature)`switch(self, path, elements, *suffix)`


[ Text >> source ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`530 2 532 17`
(signature)`source(self)`


[ Text >> selectlines ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`534 2 541 14`
(signature)`selectlines(self, element)`


[ Text >> __init__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`543 2 550 18`
(signature)`__init__(self, annotations, resolution, elements, docs, data, source)`


[ split_element ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`552 1 571 32`
(signature)`split_element(project, factor)`

Given a project relative factor path, split the path isolating
the factor's element from the path and construct a triple containing
the link, title, and target type describing the factor path.


[ relation ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`573 1 586 17`
(signature)`relation(origin, target)`

Identify the relation of the (factor-local/parameter)&<#relation.Parameters.target[target]> project to (factor-local/parameter)&<#relation.Parameters.origin[origin]> project.


[ dr_absolute_path ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`588 1 620 37`
(signature)`dr_absolute_path(requirements, context, project, reference)`

Resolve an absolute reference.


[ dr_context_path ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`622 1 649 39`
(signature)`dr_context_path(context, project, reference)`

Resolve a root-Context relative reference.


[ dr_project_path ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`651 1 670 19`
(signature)`dr_project_path(project, reference)`

Resolve a Project relative reference.


[ index ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`672 1 703 11`
(signature)`index(factor)`

Construct an index of elements using the identifier paths.


[ match ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`705 1 723 19`
(signature)`match(index, path, subpath)`

Check for the presence of (factor-local/parameter)&<#match.Parameters.subpath[subpath]> in the element identified by (factor-local/parameter)&<#match.Parameters.path[path]> in (factor-local/parameter)&<#match.Parameters.index[index]>.

[ > Returns ]

Returns the number of leading (factor-local/parameter)&<#match.Parameters.subpath[subpath]> items that matched at that position.


[ find ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`725 1 750 15`
(signature)`find(index, path, rpath)`

Find all the matches for (factor-local/parameter)&<#find.Parameters.rpath[rpath]> in (factor-local/parameter)&<#find.Parameters.index[index]> by ascending through (factor-local/parameter)&<#find.Parameters.path[path]>.

[ > Returns ]

A sorted list identifying all non-zero matches is returned where the
first entry is the deepest match in the nearest path. Consistency
is given preference over location.


[ Resolution ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`752 1 908 30`
! INHERIT:
	- (control)`property-set`
	- (source/area)`752 18 752 32`
	- (type/syntax)`comethod.object`
	- (type/remote/factor-element)&<http://fault.io/python/context/comethod#object[fault.context.comethod.object]>
	
Reference resolution interface for factored projects.


[ Resolution >> __init__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`757 2 765 23`
(signature)`__init__(self, requirements, context, project, factor)`


[ Resolution >> disambiguate ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`766 2 781 18`
(signature)`disambiguate(self, context, path, element, *suffix)`


[ Resolution >> reflect ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`782 2 787 19`
(signature)`reflect(self, context, path, element, *suffix)`

Trap for elements where descent should not occur.


[ Resolution >> switch ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`789 2 809 42`
(signature)`switch(self, context, path, element, *suffix)`


[ Resolution >> rewrite ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`811 2 822 13`
(signature)`rewrite(self, context, root)`

Rewrite the references in the element tree (factor-local/parameter)&<#Resolution.rewrite.Parameters.root[root]> as relative IRI's.

[ >> Parameters ]

/(parameter)`self`/
	
	(control/absent)`Undocumented`.

/(parameter)`context`/
	
	The identifier path of the documented element.

/(parameter)`root`/
	
	The documentation's chapter.


[ Resolution >> resolve ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`824 2 902 62`
(signature)`resolve(self, path, fragment)`


[ Resolution >> partial ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`904 2 905 48`
(signature)`partial(self, path, **kw)`


[ Resolution >> add_index ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`907 2 908 30`
(signature)`add_index(self, elements)`


[ load ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`910 1 918 25`
(signature)`load(f)`


[ transform ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`920 1 950 31`
(signature)`transform(annotations, resolution, datadir, source)`

