[["Root daemon process for service management and scheduled processes.", "", "&.root provides the primary support for &.bin.rootd which manages a set of daemons,", "", "Multiple instances of rootd may exist, but usually only one per-user is desired.", "The (system/home)`.fault` directory is used by default, but can be adjusted by a command", "line parameter. The daemon directory supplies all the necessary configuration,", "so few options are available from system invocation."], ["Service daemon state and control interface.", "", "Manages the interactions to daemons and commands.", "", "Service processors do not exit unless the service is *completely* removed", "by an administrative instruction; disabling a service does not remove it.", "They primarily respond to events in order to keep the daemon running.", "Secondarily, it provides the administrative interface.", "", "[ Properties ]", "/s_minimum_runtime/", "\tIdentifies the minimum time required to identify a successful start.", "/s_retry_wait/", "\tDuration to wait before automatically attemping to start the daemon again.", "/s_maximum_attempts/", "\tLimit of attempts to make before giving up and inhibiting daemon start."], ["Invoke the service. Does nothing if &s_status is `'executed'`."], ["Called when a service process exits."], ["Create or Update the KInvocation instance used to launch the daemon."], ["Return the status of the service process."], ["Send a stop signal to the service."], ["Send a continue signal to the service."], ["Enable the service, but do not start it."], ["Disable the service, but do not change its status."], ["Signal the service to stop and inhibit it from being restarted if enabled."], ["Signal the service to stop (SIGTERM) and allow it to restart."], ["Send a SIGHUP to the service or launch the update command."], ["Start the daemon unless it's already running; explicit starts ignore", "&service.Configuration.actuates."], ["Normalize the state of the service."], ["Interrupt the service."], ["Force the daemon process to exit."], ["Terminate the service and destroy its daemon directory."], ["Set of &Service transactions managing the presence of the service process."], ["Create the faultd context if it does not exist."], ["Dispatch a new service."], ["Dispatch all loaded service transactions."]]