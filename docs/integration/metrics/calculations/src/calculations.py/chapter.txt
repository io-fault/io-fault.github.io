! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 126 21`
		- (coverage-zeros)`0`
		- (coverage-counters)`0`
Calculations for project metrics.


[ Iterable ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 46`

[ Sequence ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 46`

[ collections ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`6 1 6 18`

[ functools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 16`

[ itertools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 16`

[ operator ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 15`

[ types ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 11 19`

[ edges ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`13 1 24 9`
(signature)`edges(view, vector)`

Get the minimums and maximums of the sorted (factor-local/parameter)&<#edges.Parameters.vector[vector]>.
Where (factor-local/parameter)&<#edges.Parameters.view[view]>


[ deltas ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`26 1 40 21`
(signature)`deltas(values, reference)`

Calculate running totals for measuring distance and variance relative to (factor-local/parameter)&<#deltas.Parameters.reference[reference]>.

Primarily used by (factor-local/function)&<#statistics[statistics]> to construct a (project-local/factor-element)&<types#Statistics[system.metrics.types.Statistics]> instance.


[ statistics ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`42 1 83 52`
		- (type/syntax)`types.Statistics`
		- (type/project-local/factor-element)&<types#Statistics[system.metrics.types.Statistics]>
		
(signature)`statistics(source, view, scale, exponent)`

Construct a (project-local/factor-element)&<types#Statistics[system.metrics.types.Statistics]> instance from the given iterable of numbers.

[ > Parameters ]

/(parameter)`source`/
	- (type/syntax)`Iterable`
	- (type/none/invalid)&<http://fault.io/dev/null[collections.abc.Iterable]>
	
	An iterator of values to calculate statistics from.

/(parameter)`view`/
	- (type/syntax)`int`
	- (type/invalid/unknown)&<#int>
	
	The size of the edges stored by the profiles.

/(parameter)`scale`/
	
	The magnification to use when counting values.

/(parameter)`exponent`/
	
	The exponent to use when calculating the variance.

/(parameter)`attributes`/
	
	(control/absent)`Undocumented`.

/(parameter)`Counter`/
	
	(control/absent)`Undocumented`.

/(parameter)`Product`/
	
	(control/absent)`Undocumented`.

/(parameter)`Partial`/
	
	(control/absent)`Undocumented`.

/(parameter)`sum`/
	
	(control/absent)`Undocumented`.

/(parameter)`map`/
	
	(control/absent)`Undocumented`.

/(parameter)`sorted`/
	
	(control/absent)`Undocumented`.


[ collapse ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`85 1 106 17`
		- (type/syntax)`dict`
		- (type/invalid/unknown)&<#dict>
		
(signature)`collapse(data, merge)`

Collapse dimensions in the given (factor-local/parameter)&<#collapse.Parameters.data[data]> by removing
the specified number of (factor-local/parameter)&<#collapse.Parameters.dimensions[dimensions]> from the key and merging
data with the given (factor-local/parameter)&<#collapse.Parameters.merge[merge]> function.

Collapse is primarily used by (invalid/unknown)&<#aggregates>.

[ > Parameters ]

/(parameter)`data`/
	
	A (none/invalid)&<http://fault.io/dev/null[collections.defaultdict]> instance designating the data to collapse.

/(parameter)`merge`/
	
	A callable that can combine measurements. For (none/invalid)&<http://fault.io/dev/null[collections.Counter]>,
	this is (none/invalid)&<http://fault.io/dev/null[collections.Counter.update]>. For (invalid/unknown)&<#list>, this is (invalid/unknown)&<#list.extend>.

/(parameter)`dimensions`/
	- (type/syntax)`int`
	- (type/invalid/unknown)&<#int>
	
	(control/absent)`Undocumented`.


[ aggregate ]
! CONTROL:
	/type/
		function
	/element/
		- (control)`property-set`
		- (source/area)`108 1 117 24`
(signature)`aggregate(durations)`

Aggregate profile data using the (factor-local/function)&<#statistics[statistics]> function.
(invalid/unknown)&<#data> is expected to be a sequence of positive numbers
where the even indexes (and zero) are cumulative, and the odds are
resident.


[ timings ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`119 1 127 20`
(signature)`timings(data)`

