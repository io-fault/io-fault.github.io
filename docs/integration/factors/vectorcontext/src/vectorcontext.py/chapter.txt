! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 514 0`
Construction Context implementation using vector formulations.


[ sys ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`4 1 4 10`

[ functools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`5 1 5 16`

[ itertools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`6 1 6 16`

[ typing ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 13`

[ collections ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 18`

[ dataclass ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 33`

[ tools ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 11 31`

[ files ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`12 1 12 30`

[ execution ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`13 1 13 34`

[ lsf ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`14 1 14 39`

[ vf ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`15 1 15 42`

[ core ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`17 1 19 37`

[ Void ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`20 1 35 69`
! INHERIT:
	- (control)`property-set`
	- (source/area)`20 12 20 20`
	- (type/syntax)`Exception`
	- (type/invalid/unknown)&<#Exception>
	
Raised when a empty vector is composed, but more than
zero fields are required by the caller.

[ > Properties ]

/v_type/
	A classification identifier for the type of request that caused the exception.

/v_required/
	The minimum number of fields required by the caller.


[ Void >> v_required ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`32 2 32 20`
		- (type/syntax)`int`
		- (type/invalid/unknown)&<#int>
		
#!source
	v_required: int = 1

[ Void >> __str__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`34 2 35 69`
(signature)`__str__(self)`


[ _feature_constants ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`37 1 38 28`
(signature)`_feature_constants(features)`


[ _feature_conclusions ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`40 1 41 48`
(signature)`_feature_conclusions(features)`


[ _variant_constants ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`43 1 48 2`
(signature)`_variant_constants(variants)`


[ _variant_conclusions ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`50 1 57 15`
(signature)`_variant_conclusions(variants)`


[ VectorParameters ]
! CONTROL:
	/type/
		class
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`58 1 81 45`
! INHERIT:
	- (control)`property-set`
	- (source/area)`58 24 58 29`
	- (type/syntax)`object`
	- (type/invalid/unknown)&<#object>
	

[ VectorParameters >> constants ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`64 2 70 36`
(signature)`constants(self)`


[ VectorParameters >> conclusions ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`72 2 78 38`
(signature)`conclusions(self)`


[ VectorParameters >> context ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`80 2 81 45`
(signature)`context(self)`


[ Mechanism ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`83 1 148 47`
! INHERIT:
	- (control)`property-set`
	- (source/area)`83 17 83 22`
	- (type/syntax)`object`
	- (type/invalid/unknown)&<#object>
	
A section of a construction context that can formulate adapters for factor processing.


[ Mechanism >> __init__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`88 2 92 18`
(signature)`__init__(self, context, mode, semantics)`


[ Mechanism >> __repr__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`94 2 95 51`
(signature)`__repr__(self)`


[ Mechanism >> _cc ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`97 2 104 10`
(signature)`_cc(self, phase, vtype, itype, xtype)`


[ Mechanism >> vectortypes ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`106 2 110 76`
(signature)`vectortypes(self, features)`

Identify formulation types for the given form and feature set.


[ Mechanism >> integrates ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`112 2 120 14`
(signature)`integrates(self, vtype, itype)`

Identify whether the mechanism is operable.


[ Mechanism >> unit_name_delta ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`122 2 130 16`
(signature)`unit_name_delta(self, vtype, itype)`

Identify the prefix and suffix for the unit file.


[ Mechanism >> prepare ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`132 2 136 51`
(signature)`prepare(self, vtype, itype, srctype)`

Construct the command constructor for source preparation.


[ Mechanism >> translate ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`138 2 142 53`
(signature)`translate(self, vtype, itype, srctype)`

Construct the command constructor for translating sources.


[ Mechanism >> render ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`144 2 148 47`
(signature)`render(self, vtype, itype)`

Construct the command constructor for rendering the factor's image.


[ Context ]
! CONTROL:
	/type/
		class
	/element/
		- (control)`property-set`
		- (source/area)`150 1 488 12`
! INHERIT:
	- (control)`property-set`
	- (source/area)`150 15 150 20`
	- (type/syntax)`object`
	- (type/invalid/unknown)&<#object>
	
Vectors Formulations based Mechanism set for building system argument vectors.


[ Context >> _ref ]
! CONTROL:
	/type/
		staticmethod
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`156 2 169 13`
(signature)`_ref(section, name)`


[ Context >> from_directory ]
! CONTROL:
	/type/
		classmethod
	/element/
		- (control)`property-set`
		- (source/area)`170 2 174 21`
(signature)`from_directory(Class, route)`

Create instance using a directory.


[ Context >> __init__ ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`176 2 187 37`
(signature)`__init__(self, route)`


[ Context >> _modes ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`189 2 199 51`
(signature)`_modes(self, factor)`

Read the modes vector from factor.


[ Context >> _variants ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`201 2 209 24`
(signature)`_variants(self, factor)`

Read the full product of system-architecture pairs from
the given variants (factor-local/parameter)&<#Context._variants.Parameters.factor[factor]>.


[ Context >> cc_unit_name_delta ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`211 2 230 33`
(signature)`cc_unit_name_delta(self, vtype, itype)`


[ Context >> cc_integration_types ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`232 2 244 81`
(signature)`cc_integration_types(self, vtype, itype)`


[ Context >> vectortypes ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`246 2 281 91`
(signature)`vectortypes(self, mode, semantics, features)`

Identify the (invalid/unknown)&<#VectorParameter> combinations to use for the given (factor-local/parameter)&<#Context.vectortypes.Parameters.semantics[semantics]> and (invalid/unknown)&<#modes>.


[ Context >> _constants ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`283 2 296 11`
(signature)`_constants(self, vtype, itype, xtype, **kw)`


[ Context >> _conclusions ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`298 2 307 25`
(signature)`_conclusions(self, vtype, itype, xtype)`


[ Context >> _compose ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`309 2 323 45`
(signature)`_compose(self, vctx, section, composition, itype, name, fallback)`


[ Context >> _load_descriptor ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`325 2 344 24`
(signature)`_load_descriptor(self, vctx, section, variants, phase, itype, xtype)`


[ Context >> _read_merged ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`346 2 358 29`
(signature)`_read_merged(self, vctx, section, variants, phase, itype, xtype)`


[ Context >> cc_compose ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`360 2 372 67`
(signature)`cc_compose(self, phase, vtype, itype, xtype)`


[ Context >> _load_intercepts ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`374 2 390 25`
(signature)`_load_intercepts(self, context)`


[ Context >> load ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`392 2 399 13`
(signature)`load(self)`

Load the product indicies.


[ Context >> configure ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`401 2 408 13`
(signature)`configure(self)`

Load the default factor semantics.


[ Context >> _read_cell ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`410 2 423 16`
(signature)`_read_cell(self, factor)`

Get the sole source type and path of the given (factor-local/parameter)&<#Context._read_cell.Parameters.factor[factor]>.


[ Context >> _load_vector ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`425 2 432 49`
(signature)`_load_vector(self, factor)`

Load vector formulations from the (factor-local/parameter)&<#Context._load_vector.Parameters.factor[factor]>.


[ Context >> _load_system ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`434 2 443 63`
(signature)`_load_system(self, factor)`

Load system command vector identified by (factor-local/parameter)&<#Context._load_system.Parameters.factor[factor]>.


[ Context >> _iq ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`445 2 447 11`
(signature)`_iq(self, name)`


[ Context >> _cat ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`449 2 456 46`
(signature)`_cat(self, ctx, index, name)`

Catenate the vectors selected in (factor-local/parameter)&<#Context._cat.Parameters.index[index]>.


[ Context >> _v ]
! CONTROL:
	/type/
		method
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`458 2 463 29`
(signature)`_v(self, factor)`


[ Context >> _map_factor_semantics ]
! CONTROL:
	/type/
		method
	/element/
		- (control)`property-set`
		- (source/area)`465 2 488 12`
(signature)`_map_factor_semantics(self, context)`

Identify the projects providing adapters for the listed semantics.

