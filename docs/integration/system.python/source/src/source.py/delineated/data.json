[[["insignificant"], ["InlineComprehension"], ["InterruptNodes"], ["isolate"], ["chain_classes"]], [{"syntax": "set([\n\ttokenize.ENCODING,\n\ttokenize.ENDMARKER,\n\ttokenize.INDENT,\n\ttokenize.DEDENT,\n\ttokenize.NL,\n\ttokenize.NEWLINE,\n\ttokenize.COMMENT,\n])", "area": [[14, 17], [22, 2]]}, [{"syntax": "ast.ListComp", "area": [[25, 2], [25, 13]]}, {"syntax": "ast.GeneratorExp", "area": [[26, 2], [26, 17]]}, {"syntax": "ast.DictComp", "area": [[27, 2], [27, 13]]}], [{"syntax": "ast.Break", "area": [[31, 2], [31, 10]]}, {"syntax": "ast.Continue", "area": [[32, 2], [32, 13]]}, {"syntax": "ast.Raise", "area": [[33, 2], [33, 10]]}, {"syntax": "ast.Return", "area": [[34, 2], [34, 11]]}, {"syntax": "ast.Yield", "area": [[35, 2], [35, 10]]}, {"syntax": "ast.YieldFrom", "area": [[36, 2], [36, 14]]}], {"syntax": "{\n\tast.Bytes: isolate_string,\n\tast.Str: isolate_string,\n\tast.Num: isolate_number,\n\tast.Name: isolate_name,\n\tast.Attribute: isolate_name,\n\tast.NameConstant: isolate_name,\n\tgetattr(ast, 'Constant', None): isolate_string,\n\tast.Dict: functools.partial(isolate_enclosure, '{', '}'),\n\tast.Set: functools.partial(isolate_enclosure, '{', '}'),\n\tast.List: functools.partial(isolate_enclosure, '[', ']'),\n\tast.Subscript: functools.partial(isolate_enclosure, '[', ']'),\n\tast.Call: functools.partial(isolate_enclosure, '(', ')'),\n}", "area": [[307, 11], [320, 1]]}, {"syntax": "tuple(isolate)", "area": [[347, 17], [347, 30]]}]]