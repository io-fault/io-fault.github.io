[[["Assignments"], ["Constants"], ["Fragment", "_method_types"], ["Fragment", "_type_map"]], [[{"syntax": "ast.Assign", "area": [[21, 16], [21, 25]]}, {"syntax": "ast.AnnAssign", "area": [[21, 28], [21, 40]]}], {"syntax": "{\n\t# ast.Constant is the node used by 3.8;\n\t# the others are slated for deprecation.\n\tgetattr(ast, 'NameConstant', None): (lambda y,x: x.value),\n\tgetattr(ast, 'Num', None): (lambda y,x: x.n),\n\tgetattr(ast, 'Str', None): (lambda y,x: x.s),\n\tgetattr(ast, 'Bytes', None): (lambda y,x: repr(x.s)),\n\tgetattr(ast, 'Constant', None): (lambda y,x: x.value),\n\n\tast.Tuple: (lambda y,x: tuple(_read_data_iterable(y,x.elts))),\n\tast.List: (lambda y,x: _read_data_iterable(y,x.elts)),\n}", "area": [[52, 13], [63, 1]]}, {"syntax": "{\n\t\t'property',\n\t\t'abstractproperty', 'abstractmethod',\n\t\t'staticmethod', 'classmethod'\n\t}", "area": [[85, 18], [89, 2]]}, {"syntax": "{\n\t\tast.Module: 'module',\n\t\tast.FunctionDef: 'function',\n\t\tast.ClassDef: 'class',\n\t\tast.Lambda: 'lambda',\n\t\tast.Import: 'import',\n\t\tast.ImportFrom: 'import-from',\n\t\tast.Assign: 'data',\n\t\tast.AnnAssign: 'data',\n\t\tgetattr(ast, 'AsyncFunctionDef', None): 'function',\n\t\tNone: None,\n\t}", "area": [[90, 14], [101, 2]]}]]