! CONTROL:
	/type/
		module
	/element/
		- (control)`property-set`
		- (source/area)`1 1 44 0`
		- (coverage-zeros)`0`
		- (coverage-counters)`0`
Unconditional error tool for construction contexts.

Provides command argument based control over exit status code and
standard error output. Used by command constructors to report unconditional failure.


[ sys ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`7 1 7 10`

[ recognition ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`8 1 8 36`

[ process ]
! CONTROL:
	/type/
		import
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`9 1 9 32`

[ required ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`11 1 14 1`
#!source
	required = {
		'-C': ('subfield-replace', 'system-exit-codes'),
		'-c': ('field-replace', 'default-exit-code'),
	}

[ restricted ]
! CONTROL:
	/type/
		data
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`16 1 16 15`
#!source
	restricted = {}

[ main ]
! CONTROL:
	/type/
		function
	/flags/
		- `undocumented`
	/element/
		- (control)`property-set`
		- (source/area)`18 1 44 44`
		- (type/syntax)`process.Exit`
		- (type/remote/factor-element)&<http://fault.io/python/system/process#Exit[fault.system.process.Exit]>
		
(signature)`main(inv)`

